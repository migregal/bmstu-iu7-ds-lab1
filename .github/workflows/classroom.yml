name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  unit-test:
    name: Run go unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
          cache-dependency-path: src/go.sum

      - name: Test
        run: cd src && make test

  build:
    name: Build apiserver
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
          cache-dependency-path: src/go.sum

      - name: Build apiserver
        run: cd src && make build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: apiserver
          path: src/bin/*
          retention-days: 1

  integration-test:
    name: Run integration tests
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - uses: actions/download-artifact@v3
        with:
          name: apiserver
          path: src/bin/

      - name: Build images
        timeout-minutes: 10
        run: |
          docker compose build
          docker compose pull --quiet

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker compose up -d --wait --wait-timeout 120
        env:
          WAIT_PORTS: 8080

      - name: Collect docker logs on failure
        if: "!success()"
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: './logs-docs'

      - name: Upload logs to GitHub
        if: "!success()"
        uses: actions/upload-artifact@master
        with:
          name: logs-docs
          path: ./logs-docs/*

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: postman/[inst] Lab1.postman_collection.json
          # environment: postman/[inst][heroku] Lab1.postman_environment.json
          environment: postman/[inst][local] Lab1.postman_environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v

  autograde:
    name: Autograding
    runs-on: ubuntu-latest
    needs: [integration-test]
    steps:
      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true

      - name: Github auto grader mark
        uses: Romanow/google-sheet-autograder-marker@v1.0
        with:
          google_token: ${{secrets.GOOGLE_API_KEY}}
          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
          homework_number: 1
          user_column: 'D'
          column_offset: 'F'
          mark: "'+"
